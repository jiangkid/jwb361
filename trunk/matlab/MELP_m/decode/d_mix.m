function [e,state_pul,state_noi,T]=d_mix(fm,T,jt,vp,state_pul,state_noi) 
% Description: Формирование смешанного сигнала возбуждения
% Inputs:
%     fm - амплитуды преобразования Фурье
%     T - значение задержки ОТ
%     jt - джиттер
%     vp - вокализованность полос
%     state_pul - начальное состояние импульсного формирующего фильтра
%     state_noi - начальное состояние шумового формирующего фильтра
% Output: 
%     e - сигнал возбуждения
%     state_pul - конечное состояние импульсного формирующего фильтра
%     state_noi - конечное состояние шумового формирующего фильтра
%     T - значение задержки ОТ

global melp_firs; % коэффициенты 5 КИХ-фильтров

% джиттер 
T=T*(1+jt*0.5*(rand-0.5)); % если величина джиттера равна 1, 
                           % значение задержки ОТ изменяется на СВ 
T=round(T);                % значение задержки ОТ округляется
% проверка ограничений на значения задержки ОТ 
if T>160
    T=160;
elseif T<20
    T=20; 
end 

% формирование сигнала возбуждения
    % формирование амплитуд фурье-спектра на периоде ОТ
    m(1:10)=fm; 
    m(T-10:T-1)=fliplr(fm); 
    if T>21 
        m(11:T-11)=1; 
    end
m=[0,m]; %добавление нулевого значения

ep=real(ifft(m));           % восстановление (вокализованного) сигнала 
                            % по его гармоникам
ep=[ep(T-9:T),ep(1:T-10)];  % перемещение последних 10 значений сигнала 
                            % в начало
% Нормализация
ep=ep*sqrt(T)*1000;      % нормализация импульсной составляющей
en=(rand(1,T)-0.5)*3464; % нормализация шумовой составляющей

efirs(1:31,1)=0; 
pfirs=efirs; 
for i=1:5 
    if vp(i)>0.5 
        pfirs=pfirs+melp_firs(:,i); % вычисление параметров 
                                    % импульсного формирующего фильтра
    else
        efirs=efirs+melp_firs(:,i); % вычисление параметров 
                                    % шумового формирующего фильтра
    end 
end 

ep=[state_pul,ep]; 
en=[state_noi,en]; 
for i=1:T 
    e(i)=sum(ep(i:30+i)*pfirs+en(i:30+i)*efirs); % формирование смешанного 
                                                 % сигнала возбуждения
end
if T<30
    state_pul=[zeros(1,30-T),ep(1:T)];
    state_noi=[zeros(1,30-T),en(1:T)];
else
    state_pul=ep(T-29:T);% Обновление состояния импульсного фильтра
    state_noi=en(T-29:T);% Обновление состояния шумового фильтра
end